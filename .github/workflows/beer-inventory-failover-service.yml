# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: beer-inventory-failover-service package,test,push to docker hub

env:
  MODULE_NAME: beer-inventory-failover-service

on:
  push:
    paths:
      - "beer-inventory-failover-service/**"
    branches: [ "master" ]
  pull_request:
    paths:
      - "beer-inventory-failover-service/**"
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3 # This action checks-out your repository under $GITHUB_WORKSPACE

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      working-directory: ${{env.MODULE_NAME}}

    - name: Get Maven project properties
      working-directory: ${{env.MODULE_NAME}}
      run: |
        echo "project_build_final_name=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout)" >> $GITHUB_ENV
        echo "project_artifact_id=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
        echo "project_id=$(mvn help:evaluate -Dexpression=project.id -q -DforceStdout)" >> $GITHUB_ENV
        echo "project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: print the maven project properties
      run: |
        echo "${{ env.project_build_final_name }}"
        echo "${{ env.project_artifact_id }}"
        echo "${{ env.project_id }}"
        echo "${{ env.project_version }}"

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./${{env.MODULE_NAME}}
        file: ./${{env.MODULE_NAME}}/Dockerfile
        build-args: |
          PROJECT_BUILD_FINAL_NAME=${{ env.project_build_final_name }}
          PROJECT_ARTIFACT_ID=${{ env.project_artifact_id }}
          PROJECT_ID=${{ env.project_id }}
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{env.MODULE_NAME}}:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{env.MODULE_NAME}}:${{env.project_version}}